server:
  port: 8081

eureka:
  client:
    service-url:
      defaultZone: http://${eureka_host}:${eureka_port}/eureka
  
spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${associations_db_host}:${associations_db_port}/${associations_db}
    username: ${associations_db_user}
    password: ${associations_db_password} 
  jpa:
    hibernate:
      ddl-auto: create
    database: postgresql

  kafka:
    bootstrap-servers: ${kafka_host}:${kafka_port} 
    consumer:
      group-id: associations-group 
      auto-offset-reset: earliest 
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted: 
              packages: com.raffleease.common_models.DTO.Kafka
            type:
              mapping: modify-availability:com.raffleease.common_models.DTO.Kafka.AssociationCreate
