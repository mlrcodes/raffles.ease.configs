server:
  port: 8084
spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${orders_db_host}:${orders_db_port}/${orders_db}
    username: ${orders_db_user}
    password: ${orders_db_password}
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true              

  kafka:
    bootstrap-servers: ${kafka_host}:${kafka_port} 
    consumer:
      group-id: orders-group 
      auto-offset-reset: earliest 
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted: 
              packages: com.raffleease.common_models.DTO.Kafka 
            type:
              mapping: payment-success:com.raffleease.common_models.DTO.Kafka.PaymentSuccess,payment-failure:com.raffleease.common_models.DTO.Kafka.PaymentFailure    
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

application:
  config:
    tickets-url: http://${raffles_host}:${raffles_port}/api/v1/tickets
    stripe-url: http://${payments_host}:${payments_port}/api/v1/stripe
